name: Validate All Test Cases
on:
  workflow_dispatch:  # Allows for manual triggering
  push:
    paths:
      - '**.xml'     # Triggers on any XML file changes in any directory
      - '**/v[0-9]*/**.xml' 
      - '.github/workflows/**'  # Temporary as we test

    branches:
      - main     # Triggers on push to main and its own branch
      - validatingAllTestCases

permissions: 
  contents: write
  pages: write

jobs:
  validate-xml:
    runs-on: ubuntu-latest
    env:
      SCRIPTING_LICENSE_KEY: ${{ secrets.SCRIPTING_LICENSE_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Debug Information
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Branch name: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Current directory structure:"
        ls -la
      shell: bash
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Download and setup Oxygen XML Scripting
      run: |
        echo "Setting up Oxygen XML Scripting..."
        mkdir scripting
        cd scripting
        wget -q https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz
        tar -xzf oxygen.tar.gz
        echo "${{ secrets.SCRIPTING_LICENSE_KEY }}" > oxygen/scriptinglicensekey.txt
        echo "Oxygen XML Scripting setup complete."
      shell: bash
    - name: Run XML Validation
      id: validation  # Added ID for reference in other steps
      continue-on-error: true  # Allow workflow to continue even if this fails
      run: |
        echo "Starting XML Validation process..."
        
        # Set up directories
        OXYGEN_SCRIPTS="${{ github.workspace }}/scripting/oxygen/scripts"
        REPORT_DIR="${{ github.workspace }}/validation-reports"
        mkdir -p "$REPORT_DIR"

        echo "Created report directory at: $REPORT_DIR"
        
        # Move to a clean directory for validation
        mkdir test_cases_validation
        cd test_cases_validation

        # Copy only the utility directories we want to validate
        for util in AGR CEI CHG LBR NFG NGG PLI; do
          if [ -d "../$util" ]; then
            cp -r "../$util" .
          fi
        done

        # Show files that will be validated/skipped
        echo "=== Files Analysis ==="
        echo "All XML files in test cases:"
        find . -type f -name "*.xml" -not -path "*/v0.9/*" | sort
        
        echo -e "\n=== Starting Validation ==="

        # Debugging; show where we are
        pwd
        echo "Current directory contents:"
        ls -la
        
        # Run validation on all XML files except v0.9
        "$OXYGEN_SCRIPTS/validate.sh" . \
          -if "*.xml" \
          -ef "**/v0.9/*.xml" \
          -ed ".svn,.git" \
          -rf "../$REPORT_DIR/validation_report.txt" \
          -rft "txt" \
          -v
          
        # After validation, check if file was created
        echo "Contents of report directory after validation:"
        ls -la "${REPORT_DIR}"
        
        validation_status=$?
        
        # Create a summary report in original REPORT_DIR
        {
          echo "Validation Summary Report"
          echo "======================="
          date
          echo
          
          if [ $validation_status -eq 0 ]; then
            echo "Validation Status: PASSED"
          else
            echo "Validation Status: FAILED"
            echo "Check validation_report.txt for details"
          fi
          
        } > "../$REPORT_DIR/summary.txt"

        # Display summary in console
        cat "$REPORT_DIR/summary.txt"
        
        if [ $validation_status -ne 0 ]; then
          echo "Validation failures detected. Check the report for details."
          exit 1
        fi
      shell: bash
      
    - name: Upload validation reports
      if: always()  # This will ensures that it runs regardless of previous step status since it keeps exiting
      uses: actions/upload-artifact@v3
      with:
        name: validation-reports
        path: validation-reports
        
    - name: Deploy validation reports to branch
      if: always()  # Run even if validation fails
      run: |
        # Configure git
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Create a new temporary directory
        TEMP_DIR="temp_reports"
        mkdir -p "$TEMP_DIR"
        
        # Copy only the validation report
        cp "${GITHUB_WORKSPACE}/validation-reports/validation_report.txt" "$TEMP_DIR/"
        cp "${GITHUB_WORKSPACE}/validation-reports/summary.txt" "$TEMP_DIR/"
        
        # Force push to the branch
        git fetch
        if git show-ref --quiet refs/remotes/origin/test-case-validation-reports; then
          git checkout test-case-validation-reports
        else
          git checkout --orphan test-case-validation-reports
          git rm -rf .
        fi
        
        # Move reports to root and commit
        cp -r "$TEMP_DIR"/* .
        git add validation_report.txt summary.txt
        git commit -m "Update validation reports [skip ci]"
        git push -f origin test-case-validation-reports
      shell: bash
