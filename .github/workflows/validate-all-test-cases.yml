name: Validate All Test Cases
on:
  workflow_dispatch:
  push:
    paths:
      - '**.xml'
      - '**/v[0-9]*/**.xml' 
      - '.github/workflows/**'
    branches:
      - main
      - validatingAllTestCases

permissions: 
  contents: write
  pages: write

jobs:
  validate-xml:
    runs-on: ubuntu-latest
    env:
      SCRIPTING_LICENSE_KEY: ${{ secrets.SCRIPTING_LICENSE_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Debug Information
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Branch name: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Current directory structure:"
        ls -la
      shell: bash

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Download and setup Oxygen XML Scripting
      run: |
        echo "Setting up Oxygen XML Scripting..."
        mkdir scripting
        cd scripting
        wget -q https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz
        tar -xzf oxygen.tar.gz
        rm oxygen.tar.gz
        echo "${{ secrets.SCRIPTING_LICENSE_KEY }}" > oxygen/scriptinglicensekey.txt
        echo "Oxygen XML Scripting setup complete."
      shell: bash

    - name: Run XML Validation
      id: validation
      continue-on-error: true
      run: |
        echo "Starting XML Validation process..."
        
        WORKSPACE="${GITHUB_WORKSPACE}"
        OXYGEN_SCRIPTS="${WORKSPACE}/scripting/oxygen/scripts"
        REPORT_DIR="validation-reports" 
        mkdir -p "$REPORT_DIR"
        
        # Initialize main report file
        echo "XML Validation Report - $(date)" > "${REPORT_DIR}/validation_report.txt"
        
        # Process each utility directory separately
        for util in AGR CEI CHG LBR NFG NGG PLI; do
          if [ -d "$util" ]; then
            echo "Processing $util directory..."
            
            # Create temporary directory for this utility
            TEMP_DIR="temp_validation_${util}"
            mkdir -p "$TEMP_DIR"
            cp -r "$util" "$TEMP_DIR/"
            
            # Run validation for this utility
            echo "Validating $util files..."
            "${OXYGEN_SCRIPTS}/validate.sh" "$TEMP_DIR/$util" \
              -if "*.xml" \
              -ef "**/v0.9/*.xml" \
              -ed ".svn,.git" \
              -rf "${REPORT_DIR}/temp_report_${util}.txt" \
              -rft "txt" \
              -v || true
            
            # Append results to main report if temp report exists
            if [ -f "${REPORT_DIR}/temp_report_${util}.txt" ]; then
              echo "=== Results for $util ===" >> "${REPORT_DIR}/validation_report.txt"
              cat "${REPORT_DIR}/temp_report_${util}.txt" >> "${REPORT_DIR}/validation_report.txt"
              echo -e "\n\n" >> "${REPORT_DIR}/validation_report.txt"
              rm "${REPORT_DIR}/temp_report_${util}.txt"
            fi
            
            # Cleanup temporary directory
            rm -rf "$TEMP_DIR"
          fi
        done
        
        # Create summary report
        {
          echo "Validation Summary Report"
          echo "======================="
          date
          echo
          echo "Problems found by utility:"
          for util in AGR CEI CHG LBR NFG NGG PLI; do
            if grep -A1 "=== Results for $util ===" "${REPORT_DIR}/validation_report.txt" > /dev/null; then
              echo "$util:"
              grep "problem(s) found" "${REPORT_DIR}/validation_report.txt" | grep "$util" || echo "No problems found"
            fi
          done
        } > "${REPORT_DIR}/summary.txt"

        # Display summary
        cat "${REPORT_DIR}/summary.txt"
        
        # Check if any problems were found
        if grep -q "problem(s) found" "${REPORT_DIR}/validation_report.txt"; then
          echo "Validation failures detected. Check the report for details."
          exit 1
        fi
      shell: bash
      
    - name: Upload validation reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: validation-reports
        path: validation-reports
        
    - name: Deploy validation reports to branch
      if: always()
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        TEMP_DIR="temp_reports"
        mkdir -p "$TEMP_DIR"
        
        cp validation-reports/validation_report.txt "$TEMP_DIR/" || true
        cp validation-reports/summary.txt "$TEMP_DIR/" || true
        
        git fetch
        if git show-ref --quiet refs/remotes/origin/test-case-validation-reports; then
          git checkout test-case-validation-reports
        else
          git checkout --orphan test-case-validation-reports
          git rm -rf .
        fi
        
        cp -r "$TEMP_DIR"/* . || true
        git add validation_report.txt summary.txt || true
        git commit -m "Update validation reports [skip ci]" || echo "No changes to commit"
        git push -f origin test-case-validation-reports
      shell: bash
