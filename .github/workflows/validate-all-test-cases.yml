name: Validate All Test Cases
on:
  workflow_dispatch: # Allows for manual triggering
  push:
    paths:
      - '**.xml' # Triggers on any XML file changes in any directory
      - '**/v[0-9]*/**.xml' 
      - '.github/workflows/**'  # Temporary as we test
    branches:
      - main # Triggers on push to main and its own branch
      - validatingAllTestCases

permissions: 
  contents: write
  pages: write

jobs:
  validate-xml:
    runs-on: ubuntu-latest
    env:
      SCRIPTING_LICENSE_KEY: ${{ secrets.SCRIPTING_LICENSE_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Debug Information
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Branch name: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Current directory structure:"
        ls -la
      shell: bash

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Download and setup Oxygen XML Scripting
      run: |
        echo "Setting up Oxygen XML Scripting..."
        mkdir -p scripting
        cd scripting
        wget -q https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz
        tar -xzf oxygen.tar.gz
        echo "${{ secrets.SCRIPTING_LICENSE_KEY }}" > oxygen/scriptinglicensekey.txt
        echo "Oxygen XML Scripting setup complete."
      shell: bash

    - name: Prepare Validation Environment
      run: |
        # Create necessary directories
        mkdir -p validation-reports
        mkdir -p test_cases_validation
        
        # Initialize report files
        touch validation-reports/validation_report.txt
        touch validation-reports/summary.txt
        
        # Show directory structure
        echo "Directory structure after preparation:"
        ls -la
        ls -la validation-reports/
      shell: bash

    - name: Run XML Validation
      id: validation
      continue-on-error: true
      run: |
        echo "Starting XML Validation process..."
        
        # Set up directories with absolute paths
        WORKSPACE="${GITHUB_WORKSPACE}"
        OXYGEN_SCRIPTS="${WORKSPACE}/scripting/oxygen/scripts"
        REPORT_DIR="${WORKSPACE}/validation-reports"
        
        # Move to validation directory
        cd test_cases_validation
        
        # Copy test case directories
        for util in AGR CEI CHG LBR NFG NGG PLI; do
          if [ -d "${WORKSPACE}/$util" ]; then
            cp -r "${WORKSPACE}/$util" .
          fi
        done

        # Debug: List files to be validated
        echo "=== Files to be validated ==="
        find . -type f -name "*.xml" -not -path "*/v0.9/*" | tee "${REPORT_DIR}/files_to_validate.txt"
        
        # Run validation with more detailed output
        echo "=== Running Validation ==="
        set -x
        "$OXYGEN_SCRIPTS/validate.sh" . \
          -if "*.xml" \
          -ef "**/v0.9/*.xml" \
          -ed ".svn,.git" \
          -rf "${REPORT_DIR}/validation_report.txt" \
          -rft "txt" \
          -v 2>&1 | tee "${REPORT_DIR}/validation_output.log"
        
        validation_status=${PIPESTATUS[0]}
        set +x
        
        # Generate detailed summary
        {
          echo "Validation Summary Report"
          echo "======================="
          date
          echo
          echo "Files processed: $(wc -l < ${REPORT_DIR}/files_to_validate.txt)"
          echo "Validation exit code: ${validation_status}"
          echo
          if [ -f "${REPORT_DIR}/validation_report.txt" ]; then
            echo "Problems found:"
            grep -c "problem(s) found" "${REPORT_DIR}/validation_report.txt" || echo "No problems found"
          fi
        } > "${REPORT_DIR}/summary.txt"
        
        # Display summary
        cat "${REPORT_DIR}/summary.txt"
        
        # Ensure files exist
        touch "${REPORT_DIR}/validation_report.txt"
        
        exit ${validation_status}
      shell: bash
      
    - name: Upload validation reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: validation-reports
        path: |
          validation-reports/validation_report.txt
          validation-reports/validation_output.log
          validation-reports/summary.txt
          validation-reports/files_to_validate.txt
        
    - name: Deploy validation reports to branch
      if: always()
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Create and populate reports directory
        mkdir -p reports
        cp validation-reports/* reports/ || true
        
        # Switch to reports branch
        git fetch
        if git show-ref --quiet refs/remotes/origin/test-case-validation-reports; then
          git checkout test-case-validation-reports
        else
          git checkout --orphan test-case-validation-reports
          git rm -rf .
        fi
        
        # Copy reports and commit
        cp -r reports/* .
        git add .
        git commit -m "Update validation reports [skip ci]" || echo "No changes to commit"
        git push -f origin test-case-validation-reports
      shell: bash
